#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(ql:quickload '(:split-sequence))
(ros:ignore-shebang)
(load (format nil "~A/~A" (uiop:getenv "ROSWELL_INSTALL_DIR") "share/common-lisp/source/roswell/install.lisp"))

(defun main (&rest argv)
  (declare (ignorable argv))
  (let* ((target (or (ros:getenv "TARGET")
                     (first argv)))
         (uname-m (ros:roswell '("roswell-internal-use uname -m") :string t))
         (uname (ros:roswell '("roswell-internal-use uname") :string t))
         (tmpdir (merge-pathnames "tmp/" (ros:opt "homedir")))
         (path (format nil "tmp/sbcl-*~A-~A/" uname-m uname))
         (cwd (uiop/os:getcwd)))
    (format t "Target: ~A~%" target)
    (cond
      ((equal target "sbcl")
       (let ((version (first (split-sequence:split-sequence #\newline (ros:roswell '("list" "versions" "sbcl"))))))
         (format t "detected version is ~A~%" version)
         (uiop:run-program (format nil "ros install sbcl/~A --without-install" version) :output :interactive)
         (uiop:chdir (format nil "~~/.roswell/src/sbcl-~A" version))
         (let ((*standard-output* (make-instance 'ros.install::count-line-stream)))
           (uiop:run-program "sh make.sh '--xc-host=ros -L sbcl-bin run'" :output t)))))))


